name: docker

on:
  push:
    branches:
      - master

jobs:
  docker:
    name: Release docker snapshot images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'adopt'
      - name: Get actual patch version
        id: actual_patch_version
        run: echo ::set-output name=ACTUAL_PATCH_VERSION::$(./mvnw help:evaluate "-Dexpression=project.version" -q -DforceStdout | cut -d - -f 1 | sed 's/v//g' | cut -d "." -f 1,2,3)
      - name: Get actual minor version
        id: actual_minor_version
        run: echo ::set-output name=ACTUAL_MINOR_VERSION::$(./mvnw help:evaluate "-Dexpression=project.version" -q -DforceStdout | cut -d - -f 1 | sed 's/v//g' | cut -d "." -f 1,2)
      - name: Get actual major version
        id: actual_major_version
        run: echo ::set-output name=ACTUAL_MAJOR_VERSION::$(./mvnw help:evaluate "-Dexpression=project.version" -q -DforceStdout | cut -d - -f 1 | sed 's/v//g' | cut -d "." -f 1)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true
      - name: Build
        run: |
          docker build . --platform linux/amd64,linux/arm/v7,linux/arm64 -t drasyl:latest -t drasyl:${{ steps.actual_patch_version.outputs.ACTUAL_PATCH_VERSION }} -t drasyl:${{ steps.actual_minor_version.outputs.ACTUAL_MINOR_VERSION }} -t drasyl:${{ steps.actual_major_version.outputs.ACTUAL_MAJOR_VERSION }}
          imageName: drasyl/drasyl
      - name: Publish
        run: |
         docker push ghcr.io/drasyl-overlay/drasyl --all-tags
