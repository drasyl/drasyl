<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2020-2022 Heiko Bornholdt and Kevin Röbert
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy
  ~ of this software and associated documentation files (the "Software"), to deal
  ~ in the Software without restriction, including without limitation the rights
  ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  ~ copies of the Software, and to permit persons to whom the Software is
  ~ furnished to do so, subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included in all
  ~ copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
  ~ EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
  ~ MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
  ~ IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
  ~ DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
  ~ OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE
  ~ OR OTHER DEALINGS IN THE SOFTWARE.
  -->

<!DOCTYPE module PUBLIC
        "-//Puppy Crawl//DTD Check Configuration 1.2//EN"
        "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">
<module name="Checker">
    <!-- Excludes all 'module-info.java' files              -->
    <!-- See https://checkstyle.org/config_filefilters.html -->
    <module name="BeforeExecutionExclusionFileFilter">
        <property name="fileNamePattern" value="module\-info\.java$"/>
    </module>

    <!-- Annotations -->
    <module name="SuppressWarningsFilter"/>

    <!-- Javadoc Comments -->
    <!--    <module name="JavadocPackage"/>-->

    <!-- Miscellaneous -->
    <module name="NewlineAtEndOfFile"/>
    <module name="UniqueProperties"/>

    <!-- Regexp -->
    <!-- Prohibit consecutive empty lines (except the lines after package/import) -->
    <module name="RegexpMultiline">
        <property name="format" value="\n *(?!package )(?!import )[^\n]+\n{3,}"/>
        <property name="message" value="two or more consecutive empty lines"/>
    </module>
    <!-- Copyright headers -->
    <module name="RegexpSingleline">
        <property name="format" value="Copyright.+Heiko Bornholdt and Kevin Röbert$"/>
        <property name="minimum" value="1"/>
        <property name="maximum" value="1"/>
        <property name="message" value="missing copyright header"/>
    </module>
    <!-- Trailing whitespace -->
    <module name="RegexpSingleline">
        <property name="format" value="\s+$"/>
        <property name="message" value="trailing whitespace"/>
    </module>

    <!-- Whitespace -->
    <module name="FileTabCharacter"/>

    <module name="TreeWalker">
        <!-- Block Checks -->
        <module name="AvoidNestedBlocks">
            <property name="allowInSwitchCase" value="true"/>
        </module>
        <module name="EmptyBlock">
            <property name="option" value="text"/>
        </module>
        <module name="EmptyCatchBlock"/>
        <module name="LeftCurly"/>
        <module name="RightCurly">
            <property name="option" value="alone"/>
        </module>

        <!-- Class Design -->
<!--        <module name="FinalClass"/>-->
<!--        <module name="InnerTypeLast"/>-->
        <module name="InterfaceIsType"/>
        <module name="MutableException"/>
        <module name="OneTopLevelClass"/>

        <!-- Coding -->
        <module name="CovariantEquals"/>
        <!--        <module name="DeclarationOrder"/>-->
        <module name="DefaultComesLast"/>
        <module name="EqualsAvoidNull"/>
        <module name="EqualsHashCode"/>
        <module name="ExplicitInitialization"/>
        <module name="FinalLocalVariable"/>
        <module name="ModifiedControlVariable"/>
        <module name="MultipleVariableDeclarations"/>
        <module name="NoFinalizer"/>
        <module name="OneStatementPerLine"/>
        <module name="PackageDeclaration"/>
        <module name="RequireThis"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/>
        <module name="SuperClone"/>
        <module name="SuperFinalize"/>
        <module name="UnnecessarySemicolonAfterTypeMemberDeclaration"/>
        <module name="UnnecessarySemicolonInEnumeration"/>
        <module name="UnnecessarySemicolonInTryWithResources"/>

        <!-- Annotations -->
        <module name="AnnotationLocation"/>
        <!-- false positives -->
        <!--        <module name="MissingDeprecated"/>-->
        <module name="MissingOverride"/>
        <module name="PackageAnnotation"/>
        <module name="SuppressWarningsHolder"/>

        <!-- Imports -->
        <module name="AvoidStarImport"/>
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>

        <!-- Javadoc Comments -->
        <module name="InvalidJavadocPosition"/>
        <module name="JavadocContentLocationCheck"/>
        <module name="JavadocStyle">
            <!-- false positives -->
            <property name="checkFirstSentence" value="false"/>
            <property name="checkHtml" value="false"/>
        </module>
        <module name="MissingJavadocPackage"/>

        <!-- Miscellaneous -->
        <module name="ArrayTypeStyle"/>
        <!-- false positives -->
        <!--        <module name="FinalParameters"/>-->
        <module name="OuterTypeFilename"/>
        <module name="UpperEll"/>

        <!-- Modifiers -->
        <module name="ModifierOrder"/>
        <!-- false positives -->
        <!--        <module name="RedundantModifier">-->
        <!--            <property name="tokens"-->
        <!--                      value="METHOD_DEF, VARIABLE_DEF, ANNOTATION_FIELD_DEF, INTERFACE_DEF, CTOR_DEF, CLASS_DEF, ENUM_DEF"/>-->
        <!--        </module>-->

        <!-- Naming Conventions -->
        <module name="AbbreviationAsWordInName">
            <property name="ignoreFinal" value="false"/>
        </module>
        <module name="CatchParameterName">
            <property name="format" value="^(e|e[1-9][\d]*|[a-z][a-z][a-zA-Z]+)$"/>
        </module>
        <module name="ClassTypeParameterName"/>
        <module name="ConstantName">
            <property name="applyToPrivate" value="false"/>
        </module>
        <module name="InterfaceTypeParameterName"/>
        <module name="LambdaParameterName"/>
        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName"/>
        <module name="MemberName">
            <property name="applyToPrivate" value="false"/>
        </module>
        <module name="MethodTypeParameterName"/>
        <module name="PackageName"/>
        <module name="ParameterName"/>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>


        <!-- Whitespace -->
        <module name="EmptyForInitializerPad"/>
        <module name="EmptyForIteratorPad">
            <property name="option" value="space"/>
        </module>
        <module name="EmptyLineSeparator">
            <property name="allowNoEmptyLineBetweenFields" value="true"/>
            <property name="allowMultipleEmptyLines" value="false"/>
            <property name="allowMultipleEmptyLinesInsideClassMembers" value="false"/>
            <property name="tokens"
                      value="IMPORT, STATIC_IMPORT, CLASS_DEF, INTERFACE_DEF, ENUM_DEF, STATIC_INIT, INSTANCE_INIT, METHOD_DEF, CTOR_DEF, VARIABLE_DEF"/>
        </module>
        <module name="GenericWhitespace"/>
        <module name="MethodParamPad"/>
        <module name="NoLineWrap"/>
        <module name="NoWhitespaceAfter">
            <property name="tokens" value="AT, INC, DEC, UNARY_MINUS, UNARY_PLUS, BNOT, LNOT, DOT, ARRAY_DECLARATOR, INDEX_OP"/>
        </module>
        <module name="NoWhitespaceBefore"/>
        <module name="OperatorWrap">
            <property name="option" value="eol"/>
        </module>
        <module name="ParenPad"/>
        <module name="SeparatorWrap">
            <property name="tokens" value="COMMA"/>
        </module>
        <module name="SingleSpaceSeparator"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround">
            <property name="tokens"
                      value="ASSIGN, BAND, BAND_ASSIGN, BOR, BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN, DO_WHILE, EQUAL, GE, GT, LAMBDA, LAND, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN, LITERAL_SWITCH, LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS, MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION, SL, SLIST, SL_ASSIGN, SR, SR_ASSIGN, STAR, STAR_ASSIGN, LITERAL_ASSERT, TYPE_EXTENSION_AND"/>
        </module>
    </module>
</module>
